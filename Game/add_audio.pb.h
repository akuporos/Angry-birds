// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: add_audio.proto

#ifndef PROTOBUF_add_5faudio_2eproto__INCLUDED
#define PROTOBUF_add_5faudio_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class AddData;
class AddDataDefaultTypeInternal;
extern AddDataDefaultTypeInternal _AddData_default_instance_;

namespace protobuf_add_5faudio_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_add_5faudio_2eproto

// ===================================================================

class AddData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AddData) */ {
 public:
  AddData();
  virtual ~AddData();

  AddData(const AddData& from);

  inline AddData& operator=(const AddData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddData& default_instance();

  static inline const AddData* internal_default_instance() {
    return reinterpret_cast<const AddData*>(
               &_AddData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AddData* other);

  // implements Message ----------------------------------------------

  inline AddData* New() const PROTOBUF_FINAL { return New(NULL); }

  AddData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddData& from);
  void MergeFrom(const AddData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes audioData = 1;
  bool has_audiodata() const;
  void clear_audiodata();
  static const int kAudioDataFieldNumber = 1;
  const ::std::string& audiodata() const;
  void set_audiodata(const ::std::string& value);
  #if LANG_CXX11
  void set_audiodata(::std::string&& value);
  #endif
  void set_audiodata(const char* value);
  void set_audiodata(const void* value, size_t size);
  ::std::string* mutable_audiodata();
  ::std::string* release_audiodata();
  void set_allocated_audiodata(::std::string* audiodata);

  // required bool lastChunk = 2;
  bool has_lastchunk() const;
  void clear_lastchunk();
  static const int kLastChunkFieldNumber = 2;
  bool lastchunk() const;
  void set_lastchunk(bool value);

  // @@protoc_insertion_point(class_scope:AddData)
 private:
  void set_has_audiodata();
  void clear_has_audiodata();
  void set_has_lastchunk();
  void clear_has_lastchunk();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr audiodata_;
  bool lastchunk_;
  friend struct protobuf_add_5faudio_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AddData

// optional bytes audioData = 1;
inline bool AddData::has_audiodata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddData::set_has_audiodata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddData::clear_has_audiodata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddData::clear_audiodata() {
  audiodata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_audiodata();
}
inline const ::std::string& AddData::audiodata() const {
  // @@protoc_insertion_point(field_get:AddData.audioData)
  return audiodata_.GetNoArena();
}
inline void AddData::set_audiodata(const ::std::string& value) {
  set_has_audiodata();
  audiodata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AddData.audioData)
}
#if LANG_CXX11
inline void AddData::set_audiodata(::std::string&& value) {
  set_has_audiodata();
  audiodata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AddData.audioData)
}
#endif
inline void AddData::set_audiodata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_audiodata();
  audiodata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AddData.audioData)
}
inline void AddData::set_audiodata(const void* value, size_t size) {
  set_has_audiodata();
  audiodata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AddData.audioData)
}
inline ::std::string* AddData::mutable_audiodata() {
  set_has_audiodata();
  // @@protoc_insertion_point(field_mutable:AddData.audioData)
  return audiodata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddData::release_audiodata() {
  // @@protoc_insertion_point(field_release:AddData.audioData)
  clear_has_audiodata();
  return audiodata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddData::set_allocated_audiodata(::std::string* audiodata) {
  if (audiodata != NULL) {
    set_has_audiodata();
  } else {
    clear_has_audiodata();
  }
  audiodata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), audiodata);
  // @@protoc_insertion_point(field_set_allocated:AddData.audioData)
}

// required bool lastChunk = 2;
inline bool AddData::has_lastchunk() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddData::set_has_lastchunk() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddData::clear_has_lastchunk() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddData::clear_lastchunk() {
  lastchunk_ = false;
  clear_has_lastchunk();
}
inline bool AddData::lastchunk() const {
  // @@protoc_insertion_point(field_get:AddData.lastChunk)
  return lastchunk_;
}
inline void AddData::set_lastchunk(bool value) {
  set_has_lastchunk();
  lastchunk_ = value;
  // @@protoc_insertion_point(field_set:AddData.lastChunk)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_add_5faudio_2eproto__INCLUDED
