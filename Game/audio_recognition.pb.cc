// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: audio_recognition.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "audio_recognition.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class WordDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Word> {
} _Word_default_instance_;
class ResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Result> {
} _Result_default_instance_;
class AddDataResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddDataResponse> {
} _AddDataResponse_default_instance_;

namespace protobuf_audio_5frecognition_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Word, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Word, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Word, confidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Word, value_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Result, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Result, confidence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Result, words_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Result, normalized_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDataResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDataResponse, responsecode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDataResponse, recognition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDataResponse, endofutt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddDataResponse, messagescount_),
  1,
  ~0u,
  0,
  2,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(Word)},
  { 9, 17, sizeof(Result)},
  { 20, 29, sizeof(AddDataResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Word_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddDataResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "audio_recognition.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _Word_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Result_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _AddDataResponse_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_response_2eproto::InitDefaults();
  _Word_default_instance_.DefaultConstruct();
  _Result_default_instance_.DefaultConstruct();
  _AddDataResponse_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\027audio_recognition.proto\032\016response.prot"
      "o\")\n\004Word\022\022\n\nconfidence\030\001 \002(\002\022\r\n\005value\030\002"
      " \002(\t\"F\n\006Result\022\022\n\nconfidence\030\001 \002(\002\022\024\n\005wo"
      "rds\030\002 \003(\0132\005.Word\022\022\n\nnormalized\030\003 \001(\t\"\232\001\n"
      "\017AddDataResponse\0226\n\014responseCode\030\001 \002(\0162 "
      ".ConnectionResponse.ResponseCode\022\034\n\013reco"
      "gnition\030\002 \003(\0132\007.Result\022\027\n\010endOfUtt\030\003 \001(\010"
      ":\005false\022\030\n\rmessagesCount\030\004 \001(\005:\0011"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 313);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "audio_recognition.proto", &protobuf_RegisterTypes);
  ::protobuf_response_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_audio_5frecognition_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Word::kConfidenceFieldNumber;
const int Word::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Word::Word()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_audio_5frecognition_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Word)
}
Word::Word(const Word& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  confidence_ = from.confidence_;
  // @@protoc_insertion_point(copy_constructor:Word)
}

void Word::SharedCtor() {
  _cached_size_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  confidence_ = 0;
}

Word::~Word() {
  // @@protoc_insertion_point(destructor:Word)
  SharedDtor();
}

void Word::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Word::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Word::descriptor() {
  protobuf_audio_5frecognition_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_audio_5frecognition_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Word& Word::default_instance() {
  protobuf_audio_5frecognition_2eproto::InitDefaults();
  return *internal_default_instance();
}

Word* Word::New(::google::protobuf::Arena* arena) const {
  Word* n = new Word;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Word::Clear() {
// @@protoc_insertion_point(message_clear_start:Word)
  if (has_value()) {
    GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*value_.UnsafeRawStringPointer())->clear();
  }
  confidence_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Word::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Word)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float confidence = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u)) {
          set_has_confidence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Word.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Word)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Word)
  return false;
#undef DO_
}

void Word::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Word)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float confidence = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->confidence(), output);
  }

  // required string value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Word.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Word)
}

::google::protobuf::uint8* Word::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Word)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float confidence = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->confidence(), target);
  }

  // required string value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Word.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Word)
  return target;
}

size_t Word::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Word)
  size_t total_size = 0;

  if (has_value()) {
    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  if (has_confidence()) {
    // required float confidence = 1;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t Word::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Word)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());

    // required float confidence = 1;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Word::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Word)
  GOOGLE_DCHECK_NE(&from, this);
  const Word* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Word>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Word)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Word)
    MergeFrom(*source);
  }
}

void Word::MergeFrom(const Word& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Word)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
    if (cached_has_bits & 0x00000002u) {
      confidence_ = from.confidence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Word::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Word)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Word::CopyFrom(const Word& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Word)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Word::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Word::Swap(Word* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Word::InternalSwap(Word* other) {
  value_.Swap(&other->value_);
  std::swap(confidence_, other->confidence_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Word::GetMetadata() const {
  protobuf_audio_5frecognition_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_audio_5frecognition_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Word

// required float confidence = 1;
bool Word::has_confidence() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Word::set_has_confidence() {
  _has_bits_[0] |= 0x00000002u;
}
void Word::clear_has_confidence() {
  _has_bits_[0] &= ~0x00000002u;
}
void Word::clear_confidence() {
  confidence_ = 0;
  clear_has_confidence();
}
float Word::confidence() const {
  // @@protoc_insertion_point(field_get:Word.confidence)
  return confidence_;
}
void Word::set_confidence(float value) {
  set_has_confidence();
  confidence_ = value;
  // @@protoc_insertion_point(field_set:Word.confidence)
}

// required string value = 2;
bool Word::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Word::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
void Word::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
void Word::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& Word::value() const {
  // @@protoc_insertion_point(field_get:Word.value)
  return value_.GetNoArena();
}
void Word::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Word.value)
}
#if LANG_CXX11
void Word::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Word.value)
}
#endif
void Word::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Word.value)
}
void Word::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Word.value)
}
::std::string* Word::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:Word.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Word::release_value() {
  // @@protoc_insertion_point(field_release:Word.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Word::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:Word.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Result::kConfidenceFieldNumber;
const int Result::kWordsFieldNumber;
const int Result::kNormalizedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Result::Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_audio_5frecognition_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Result)
}
Result::Result(const Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      words_(from.words_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  normalized_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_normalized()) {
    normalized_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.normalized_);
  }
  confidence_ = from.confidence_;
  // @@protoc_insertion_point(copy_constructor:Result)
}

void Result::SharedCtor() {
  _cached_size_ = 0;
  normalized_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  confidence_ = 0;
}

Result::~Result() {
  // @@protoc_insertion_point(destructor:Result)
  SharedDtor();
}

void Result::SharedDtor() {
  normalized_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Result::descriptor() {
  protobuf_audio_5frecognition_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_audio_5frecognition_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Result& Result::default_instance() {
  protobuf_audio_5frecognition_2eproto::InitDefaults();
  return *internal_default_instance();
}

Result* Result::New(::google::protobuf::Arena* arena) const {
  Result* n = new Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Result::Clear() {
// @@protoc_insertion_point(message_clear_start:Result)
  words_.Clear();
  if (has_normalized()) {
    GOOGLE_DCHECK(!normalized_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*normalized_.UnsafeRawStringPointer())->clear();
  }
  confidence_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float confidence = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u)) {
          set_has_confidence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &confidence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Word words = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_words()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string normalized = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_normalized()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->normalized().data(), this->normalized().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Result.normalized");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Result)
  return false;
#undef DO_
}

void Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float confidence = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->confidence(), output);
  }

  // repeated .Word words = 2;
  for (unsigned int i = 0, n = this->words_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->words(i), output);
  }

  // optional string normalized = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->normalized().data(), this->normalized().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Result.normalized");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->normalized(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Result)
}

::google::protobuf::uint8* Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float confidence = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->confidence(), target);
  }

  // repeated .Word words = 2;
  for (unsigned int i = 0, n = this->words_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->words(i), deterministic, target);
  }

  // optional string normalized = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->normalized().data(), this->normalized().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Result.normalized");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->normalized(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Result)
  return target;
}

size_t Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Result)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required float confidence = 1;
  if (has_confidence()) {
    total_size += 1 + 4;
  }
  // repeated .Word words = 2;
  {
    unsigned int count = this->words_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->words(i));
    }
  }

  // optional string normalized = 3;
  if (has_normalized()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->normalized());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Result)
  GOOGLE_DCHECK_NE(&from, this);
  const Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Result)
    MergeFrom(*source);
  }
}

void Result::MergeFrom(const Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  words_.MergeFrom(from.words_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_normalized();
      normalized_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.normalized_);
    }
    if (cached_has_bits & 0x00000002u) {
      confidence_ = from.confidence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Result::CopyFrom(const Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->words())) return false;
  return true;
}

void Result::Swap(Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Result::InternalSwap(Result* other) {
  words_.InternalSwap(&other->words_);
  normalized_.Swap(&other->normalized_);
  std::swap(confidence_, other->confidence_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Result::GetMetadata() const {
  protobuf_audio_5frecognition_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_audio_5frecognition_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Result

// required float confidence = 1;
bool Result::has_confidence() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Result::set_has_confidence() {
  _has_bits_[0] |= 0x00000002u;
}
void Result::clear_has_confidence() {
  _has_bits_[0] &= ~0x00000002u;
}
void Result::clear_confidence() {
  confidence_ = 0;
  clear_has_confidence();
}
float Result::confidence() const {
  // @@protoc_insertion_point(field_get:Result.confidence)
  return confidence_;
}
void Result::set_confidence(float value) {
  set_has_confidence();
  confidence_ = value;
  // @@protoc_insertion_point(field_set:Result.confidence)
}

// repeated .Word words = 2;
int Result::words_size() const {
  return words_.size();
}
void Result::clear_words() {
  words_.Clear();
}
const ::Word& Result::words(int index) const {
  // @@protoc_insertion_point(field_get:Result.words)
  return words_.Get(index);
}
::Word* Result::mutable_words(int index) {
  // @@protoc_insertion_point(field_mutable:Result.words)
  return words_.Mutable(index);
}
::Word* Result::add_words() {
  // @@protoc_insertion_point(field_add:Result.words)
  return words_.Add();
}
::google::protobuf::RepeatedPtrField< ::Word >*
Result::mutable_words() {
  // @@protoc_insertion_point(field_mutable_list:Result.words)
  return &words_;
}
const ::google::protobuf::RepeatedPtrField< ::Word >&
Result::words() const {
  // @@protoc_insertion_point(field_list:Result.words)
  return words_;
}

// optional string normalized = 3;
bool Result::has_normalized() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Result::set_has_normalized() {
  _has_bits_[0] |= 0x00000001u;
}
void Result::clear_has_normalized() {
  _has_bits_[0] &= ~0x00000001u;
}
void Result::clear_normalized() {
  normalized_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_normalized();
}
const ::std::string& Result::normalized() const {
  // @@protoc_insertion_point(field_get:Result.normalized)
  return normalized_.GetNoArena();
}
void Result::set_normalized(const ::std::string& value) {
  set_has_normalized();
  normalized_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Result.normalized)
}
#if LANG_CXX11
void Result::set_normalized(::std::string&& value) {
  set_has_normalized();
  normalized_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Result.normalized)
}
#endif
void Result::set_normalized(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_normalized();
  normalized_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Result.normalized)
}
void Result::set_normalized(const char* value, size_t size) {
  set_has_normalized();
  normalized_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Result.normalized)
}
::std::string* Result::mutable_normalized() {
  set_has_normalized();
  // @@protoc_insertion_point(field_mutable:Result.normalized)
  return normalized_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Result::release_normalized() {
  // @@protoc_insertion_point(field_release:Result.normalized)
  clear_has_normalized();
  return normalized_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Result::set_allocated_normalized(::std::string* normalized) {
  if (normalized != NULL) {
    set_has_normalized();
  } else {
    clear_has_normalized();
  }
  normalized_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), normalized);
  // @@protoc_insertion_point(field_set_allocated:Result.normalized)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddDataResponse::kResponseCodeFieldNumber;
const int AddDataResponse::kRecognitionFieldNumber;
const int AddDataResponse::kEndOfUttFieldNumber;
const int AddDataResponse::kMessagesCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddDataResponse::AddDataResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_audio_5frecognition_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:AddDataResponse)
}
AddDataResponse::AddDataResponse(const AddDataResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      recognition_(from.recognition_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&endofutt_, &from.endofutt_,
    reinterpret_cast<char*>(&messagescount_) -
    reinterpret_cast<char*>(&endofutt_) + sizeof(messagescount_));
  // @@protoc_insertion_point(copy_constructor:AddDataResponse)
}

void AddDataResponse::SharedCtor() {
  _cached_size_ = 0;
  endofutt_ = false;
  responsecode_ = 200;
  messagescount_ = 1;
}

AddDataResponse::~AddDataResponse() {
  // @@protoc_insertion_point(destructor:AddDataResponse)
  SharedDtor();
}

void AddDataResponse::SharedDtor() {
}

void AddDataResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddDataResponse::descriptor() {
  protobuf_audio_5frecognition_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_audio_5frecognition_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddDataResponse& AddDataResponse::default_instance() {
  protobuf_audio_5frecognition_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddDataResponse* AddDataResponse::New(::google::protobuf::Arena* arena) const {
  AddDataResponse* n = new AddDataResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:AddDataResponse)
  recognition_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    endofutt_ = false;
    responsecode_ = 200;
    messagescount_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AddDataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:AddDataResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .ConnectionResponse.ResponseCode responseCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ConnectionResponse_ResponseCode_IsValid(value)) {
            set_responsecode(static_cast< ::ConnectionResponse_ResponseCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Result recognition = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_recognition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool endOfUtt = 3 [default = false];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_endofutt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &endofutt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 messagesCount = 4 [default = 1];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_messagescount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &messagescount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:AddDataResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:AddDataResponse)
  return false;
#undef DO_
}

void AddDataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:AddDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ConnectionResponse.ResponseCode responseCode = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->responsecode(), output);
  }

  // repeated .Result recognition = 2;
  for (unsigned int i = 0, n = this->recognition_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->recognition(i), output);
  }

  // optional bool endOfUtt = 3 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->endofutt(), output);
  }

  // optional int32 messagesCount = 4 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->messagescount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:AddDataResponse)
}

::google::protobuf::uint8* AddDataResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:AddDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .ConnectionResponse.ResponseCode responseCode = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->responsecode(), target);
  }

  // repeated .Result recognition = 2;
  for (unsigned int i = 0, n = this->recognition_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->recognition(i), deterministic, target);
  }

  // optional bool endOfUtt = 3 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->endofutt(), target);
  }

  // optional int32 messagesCount = 4 [default = 1];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->messagescount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:AddDataResponse)
  return target;
}

size_t AddDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:AddDataResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .ConnectionResponse.ResponseCode responseCode = 1;
  if (has_responsecode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->responsecode());
  }
  // repeated .Result recognition = 2;
  {
    unsigned int count = this->recognition_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->recognition(i));
    }
  }

  // optional bool endOfUtt = 3 [default = false];
  if (has_endofutt()) {
    total_size += 1 + 1;
  }

  // optional int32 messagesCount = 4 [default = 1];
  if (has_messagescount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->messagescount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddDataResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:AddDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddDataResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddDataResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:AddDataResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:AddDataResponse)
    MergeFrom(*source);
  }
}

void AddDataResponse::MergeFrom(const AddDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:AddDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  recognition_.MergeFrom(from.recognition_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      endofutt_ = from.endofutt_;
    }
    if (cached_has_bits & 0x00000002u) {
      responsecode_ = from.responsecode_;
    }
    if (cached_has_bits & 0x00000004u) {
      messagescount_ = from.messagescount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AddDataResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:AddDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddDataResponse::CopyFrom(const AddDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:AddDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddDataResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->recognition())) return false;
  return true;
}

void AddDataResponse::Swap(AddDataResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddDataResponse::InternalSwap(AddDataResponse* other) {
  recognition_.InternalSwap(&other->recognition_);
  std::swap(endofutt_, other->endofutt_);
  std::swap(responsecode_, other->responsecode_);
  std::swap(messagescount_, other->messagescount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddDataResponse::GetMetadata() const {
  protobuf_audio_5frecognition_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_audio_5frecognition_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddDataResponse

// required .ConnectionResponse.ResponseCode responseCode = 1;
bool AddDataResponse::has_responsecode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AddDataResponse::set_has_responsecode() {
  _has_bits_[0] |= 0x00000002u;
}
void AddDataResponse::clear_has_responsecode() {
  _has_bits_[0] &= ~0x00000002u;
}
void AddDataResponse::clear_responsecode() {
  responsecode_ = 200;
  clear_has_responsecode();
}
::ConnectionResponse_ResponseCode AddDataResponse::responsecode() const {
  // @@protoc_insertion_point(field_get:AddDataResponse.responseCode)
  return static_cast< ::ConnectionResponse_ResponseCode >(responsecode_);
}
void AddDataResponse::set_responsecode(::ConnectionResponse_ResponseCode value) {
  assert(::ConnectionResponse_ResponseCode_IsValid(value));
  set_has_responsecode();
  responsecode_ = value;
  // @@protoc_insertion_point(field_set:AddDataResponse.responseCode)
}

// repeated .Result recognition = 2;
int AddDataResponse::recognition_size() const {
  return recognition_.size();
}
void AddDataResponse::clear_recognition() {
  recognition_.Clear();
}
const ::Result& AddDataResponse::recognition(int index) const {
  // @@protoc_insertion_point(field_get:AddDataResponse.recognition)
  return recognition_.Get(index);
}
::Result* AddDataResponse::mutable_recognition(int index) {
  // @@protoc_insertion_point(field_mutable:AddDataResponse.recognition)
  return recognition_.Mutable(index);
}
::Result* AddDataResponse::add_recognition() {
  // @@protoc_insertion_point(field_add:AddDataResponse.recognition)
  return recognition_.Add();
}
::google::protobuf::RepeatedPtrField< ::Result >*
AddDataResponse::mutable_recognition() {
  // @@protoc_insertion_point(field_mutable_list:AddDataResponse.recognition)
  return &recognition_;
}
const ::google::protobuf::RepeatedPtrField< ::Result >&
AddDataResponse::recognition() const {
  // @@protoc_insertion_point(field_list:AddDataResponse.recognition)
  return recognition_;
}

// optional bool endOfUtt = 3 [default = false];
bool AddDataResponse::has_endofutt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AddDataResponse::set_has_endofutt() {
  _has_bits_[0] |= 0x00000001u;
}
void AddDataResponse::clear_has_endofutt() {
  _has_bits_[0] &= ~0x00000001u;
}
void AddDataResponse::clear_endofutt() {
  endofutt_ = false;
  clear_has_endofutt();
}
bool AddDataResponse::endofutt() const {
  // @@protoc_insertion_point(field_get:AddDataResponse.endOfUtt)
  return endofutt_;
}
void AddDataResponse::set_endofutt(bool value) {
  set_has_endofutt();
  endofutt_ = value;
  // @@protoc_insertion_point(field_set:AddDataResponse.endOfUtt)
}

// optional int32 messagesCount = 4 [default = 1];
bool AddDataResponse::has_messagescount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AddDataResponse::set_has_messagescount() {
  _has_bits_[0] |= 0x00000004u;
}
void AddDataResponse::clear_has_messagescount() {
  _has_bits_[0] &= ~0x00000004u;
}
void AddDataResponse::clear_messagescount() {
  messagescount_ = 1;
  clear_has_messagescount();
}
::google::protobuf::int32 AddDataResponse::messagescount() const {
  // @@protoc_insertion_point(field_get:AddDataResponse.messagesCount)
  return messagescount_;
}
void AddDataResponse::set_messagescount(::google::protobuf::int32 value) {
  set_has_messagescount();
  messagescount_ = value;
  // @@protoc_insertion_point(field_set:AddDataResponse.messagesCount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
